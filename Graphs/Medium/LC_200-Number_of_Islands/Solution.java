import java.util.*;

class Solution {
    public int numIslands(char[][] grid) {
        int rows = grid.length, cols = grid.length;

        int count = 0;
        for (int r = 0; r < rows; ++r) {
            for (int c = 0; c < cols; ++c) {
                bfs(r, c, rows, cols, grid);
                ++count;
            }
        }
        return count;
    }

    private static class Indicies {
        int row, col;
        Indicies(int row, int col) {
            this.row = row;
            this.col = col;
        }
    }
    private void bfs(int r, int c, int rows, int cols, int grid) {
        Queue<Indicies> q = new Queue<Indicies>() {
            
        };
    }
}

class TestCases {
    public static void main(String[] args) {
        // In terminal:
        // Compile:     "javac Solution.java"
        // Test cases:  "java -ea TestCases"
        char[][] grid;
        int attempt;

        // Example 1:
        grid = new char[][] {
            {'1','1','1','1','0'},
            {'1','1','0','1','0'},
            {'1','1','0','0','0'},
            {'0','0','0','0','0'}
        };
        attempt = new Solution().numIslands(grid);
        assert attempt == 1 : "Expected 1, but got " + attempt;

        // Example 2:
        grid = new char[][] {
            {'1','1','0','0','0'},
            {'1','1','0','0','0'},
            {'0','0','1','0','0'},
            {'0','0','0','1','1'}
        };
        attempt = new Solution().numIslands(grid);
        assert attempt == 3 : "Expected 3, but got " + attempt;

        // Test case 3:
        grid = new char[][] {
            {'0','0','1','0','0','1','0','0','0','0','0','0','0','0','1','1','0','1','0','0'},
            {'0','1','0','0','0','0','1','1','0','0','0','1','0','0','1','1','0','0','0','0'},
            {'1','0','1','1','0','0','0','0','0','1','0','0','0','1','0','1','1','1','1','0'},
            {'1','1','0','0','0','0','0','0','0','0','1','0','0','1','1','1','1','1','1','1'},
            {'0','0','0','0','0','1','0','0','0','1','1','1','1','0','1','0','0','0','0','0'},
            {'0','1','1','1','0','0','0','1','0','1','0','1','0','0','1','0','1','1','0','0'},
            {'0','0','0','0','0','0','0','0','1','1','1','0','0','1','1','0','0','0','0','0'},
            {'0','1','1','0','0','0','0','0','1','0','1','1','0','1','1','0','0','1','0','0'},
            {'0','0','1','1','1','0','0','1','0','0','0','0','0','0','0','1','1','1','0','1'},
            {'1','1','0','0','0','1','0','1','0','0','0','1','1','0','0','1','0','1','1','0'},
            {'0','0','0','0','0','0','1','0','1','1','0','0','1','0','1','1','1','1','0','1'},
            {'0','0','1','1','0','0','1','0','1','0','0','1','0','0','1','0','0','1','0','1'},
            {'0','1','0','0','0','0','0','1','0','0','0','0','0','0','1','1','1','0','0','0'},
            {'0','0','1','0','1','0','0','1','1','0','1','1','1','0','0','1','1','0','0','1'},
            {'1','0','1','0','1','0','1','0','0','0','0','0','0','0','1','0','0','1','1','0'},
            {'1','0','1','1','1','0','1','0','0','0','0','0','0','1','0','0','0','0','1','1'},
            {'1','0','0','0','0','1','0','0','0','0','0','0','1','0','0','0','0','0','1','1'},
            {'0','0','0','0','0','0','1','0','0','0','1','0','1','0','1','1','0','1','0','1'},
            {'1','0','0','1','0','0','0','0','0','0','1','0','0','0','0','0','1','1','1','1'},
            {'0','0','0','1','1','0','0','0','0','0','0','0','0','1','0','0','0','1','0','0'}
        };
        attempt = new Solution().numIslands(grid);
        assert attempt == 45 : "Expected 45, but got " + attempt;
    }
}